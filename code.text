// Cinew Movie Review & Recommendation App with Black & Red Theme

import React, { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

const App = () => {
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [selectedCategory, setSelectedCategory] = useState("All");
  const [reviews, setReviews] = useState({});

  const handleLogin = () => setIsLoggedIn(true);
  const handleLogout = () => setIsLoggedIn(false);
  const handleCategoryClick = (category) => setSelectedCategory(category);

  const handleReviewSubmit = (title, reviewText) => {
    setReviews((prev) => ({
      ...prev,
      [title]: [...(prev[title] || []), reviewText]
    }));
  };

  const movies = [
    {
      title: "Jawan",
      genre: "Bollywood",
      description: "A high-octane action thriller featuring Shah Rukh Khan."
    },
    {
      title: "Oppenheimer",
      genre: "Hollywood",
      description: "Christopher Nolan's gripping biopic on the father of the atomic bomb."
    },
    {
      title: "Scam 1992",
      genre: "OTT Platforms",
      description: "Based on the life of stockbroker Harshad Mehta."
    },
    {
      title: "Sairat",
      genre: "Marathi Movies",
      description: "A love story that shook Marathi cinema."
    },
    {
      title: "RRR",
      genre: "Bollywood",
      description: "A period action drama film featuring Jr. NTR and Ram Charan."
    }
  ];

  const filteredMovies = selectedCategory === "All"
    ? movies
    : movies.filter((movie) => movie.genre === selectedCategory);

  return (
    <div className="bg-dark text-light min-vh-100">
      <NavBar
        isLoggedIn={isLoggedIn}
        onLogin={handleLogin}
        onLogout={handleLogout}
        selectedCategory={selectedCategory}
        onCategoryClick={handleCategoryClick}
      />

      <main className="container py-5">
        <motion.h2
          className="text-center mb-4 text-danger"
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          {selectedCategory} Movies
        </motion.h2>

        <motion.div
          className="row"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.2 }}
        >
          <AnimatePresence>
            {filteredMovies.map((movie, index) => (
              <motion.div
                className="col-md-4 mb-4"
                key={index}
                initial={{ opacity: 0, scale: 0.95 }}
                animate={{ opacity: 1, scale: 1 }}
                exit={{ opacity: 0, scale: 0.95 }}
                transition={{ duration: 0.3 }}
              >
                <MovieCard
                  {...movie}
                  reviews={reviews[movie.title] || []}
                  onReviewSubmit={handleReviewSubmit}
                  isLoggedIn={isLoggedIn}
                />
              </motion.div>
            ))}
          </AnimatePresence>
        </motion.div>
      </main>
    </div>
  );
};

const NavBar = ({ isLoggedIn, onLogin, onLogout, selectedCategory, onCategoryClick }) => (
  <motion.nav
    className="navbar navbar-expand-lg navbar-dark bg-black shadow sticky-top"
    initial={{ y: -50, opacity: 0 }}
    animate={{ y: 0, opacity: 1 }}
    transition={{ duration: 0.5 }}
  >
    <div className="container">
      <a className="navbar-brand fw-bold text-danger" href="#">üé¨ Cinew</a>
      <ul className="navbar-nav me-auto mb-2 mb-lg-0 d-flex flex-row gap-2">
        {['All', 'Bollywood', 'Hollywood', 'OTT Platforms', 'Marathi Movies'].map((category) => (
          <li className="nav-item" key={category}>
            <button
              className={`btn btn-sm ${selectedCategory === category ? 'btn-danger text-white' : 'btn-outline-danger text-light border-light'}`}
              onClick={() => onCategoryClick(category)}
            >
              {category}
            </button>
          </li>
        ))}
      </ul>
      <div className="d-flex">
        {!isLoggedIn ? (
          <button className="btn btn-danger" onClick={onLogin}>Log In / Sign Up</button>
        ) : (
          <button className="btn btn-outline-light" onClick={onLogout}>Logout</button>
        )}
      </div>
    </div>
  </motion.nav>
);

const MovieCard = ({ title, genre, description, reviews, onReviewSubmit, isLoggedIn }) => {
  const [reviewText, setReviewText] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    if (reviewText.trim()) {
      onReviewSubmit(title, reviewText);
      setReviewText("");
    }
  };

  return (
    <div className="card bg-secondary text-light shadow h-100 border border-danger">
      <div className="card-body d-flex flex-column justify-content-between">
        <div>
          <h5 className="card-title fw-bold text-danger">{title}</h5>
          <h6 className="card-subtitle mb-2 text-light">{genre}</h6>
          <p className="card-text">{description}</p>
        </div>

        {isLoggedIn && (
          <form onSubmit={handleSubmit} className="mt-3">
            <textarea
              className="form-control mb-2"
              placeholder="Write your review..."
              value={reviewText}
              onChange={(e) => setReviewText(e.target.value)}
            />
            <button type="submit" className="btn btn-danger btn-sm">Submit Review</button>
          </form>
        )}

        {reviews.length > 0 && (
          <div className="mt-3">
            <h6 className="text-light">User Reviews:</h6>
            <ul className="list-unstyled">
              {reviews.map((r, idx) => (
                <li key={idx} className="text-light border-top pt-1">‚Ä¢ {r}</li>
              ))}
            </ul>
          </div>
        )}
      </div>
    </div>
  );
};

export default App;
///////////////////////





















// App.jsx
import React from "react";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import Navbar from "./components/Navbar";
import Home from "./pages/Home";
import Login from "./pages/Login";
import Signup from "./pages/Signup";
import Bollywood from "./pages/Bollywood";
import Hollywood from "./pages/Hollywood";
import OTT from "./pages/OTT";
import Marathi from "./pages/Marathi";
import MovieDetail from "./pages/MovieDetail";
import Dashboard from "./pages/Dashboard";

const App = () => {
  return (
    <Router>
      <Navbar />
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/login" element={<Login />} />
        <Route path="/signup" element={<Signup />} />
        <Route path="/bollywood" element={<Bollywood />} />
        <Route path="/hollywood" element={<Hollywood />} />
        <Route path="/ott" element={<OTT />} />
        <Route path="/marathi" element={<Marathi />} />
        <Route path="/movie/:id" element={<MovieDetail />} />
        <Route path="/dashboard" element={<Dashboard />} />
      </Routes>
    </Router>
  );
};

export default App;

// pages/Signup.jsx
import React from "react";

const Signup = () => {
  return (
    <div className="flex items-center justify-center h-screen bg-black text-white">
      <div className="bg-gray-900 p-10 rounded-2xl shadow-lg w-[400px]">
        <h2 className="text-3xl font-bold text-center text-red-500 mb-6">Create Your Cinew Account</h2>
        <form className="flex flex-col space-y-4">
          <input type="text" placeholder="Username" className="bg-gray-800 p-3 rounded-lg focus:ring-2 focus:ring-red-500 outline-none" />
          <input type="email" placeholder="Email" className="bg-gray-800 p-3 rounded-lg focus:ring-2 focus:ring-red-500 outline-none" />
          <input type="password" placeholder="Password" className="bg-gray-800 p-3 rounded-lg focus:ring-2 focus:ring-red-500 outline-none" />
          <button type="submit" className="bg-red-600 hover:bg-red-700 py-3 rounded-lg font-semibold">
            Sign Up
          </button>
        </form>
      </div>
    </div>
  );
};

export default Signup;

// pages/MovieDetail.jsx
import React from "react";
import { useParams } from "react-router-dom";

const MovieDetail = () => {
  const { id } = useParams();
  const movie = {
    title: "Jawan",
    banner: "/images/jawan.jpg",
    description: "A gripping action-thriller that keeps you on the edge.",
    rating: 8.5,
    reviews: [
      { user: "Aman", text: "Amazing movie!", stars: 5 },
      { user: "Sneha", text: "SRK nailed it!", stars: 4 },
    ],
  };

  return (
    <div className="bg-black text-white min-h-screen px-10 py-10">
      <div className="flex flex-col md:flex-row gap-8">
        <img src={movie.banner} alt={movie.title} className="rounded-2xl w-full md:w-1/3 object-cover" />
        <div>
          <h1 className="text-4xl font-bold text-red-500 mb-4">{movie.title}</h1>
          <p className="text-gray-300 mb-2">‚≠ê {movie.rating}</p>
          <p className="text-lg mb-6">{movie.description}</p>

          <h2 className="text-2xl font-semibold text-red-400 mb-2">Write a Review</h2>
          <form className="mb-6">
            <textarea
              placeholder="Your review..."
              className="w-full bg-gray-800 p-3 rounded-lg mb-3 focus:ring-2 focus:ring-red-500 outline-none"
              rows="3"
            ></textarea>
            <button className="bg-red-600 hover:bg-red-700 py-2 px-6 rounded-full">
              Submit Review
            </button>
          </form>

          <h2 className="text-xl font-semibold text-red-400 mb-2">User Reviews</h2>
          {movie.reviews.map((review, i) => (
            <div key={i} className="bg-gray-800 p-4 rounded-lg mb-3">
              <p className="font-bold text-white">{review.user}</p>
              <p className="text-sm text-gray-300">{review.text}</p>
              <p className="text-yellow-400">‚≠ê {review.stars}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default MovieDetail;

// pages/Dashboard.jsx
import React from "react";

const Dashboard = () => {
  const user = {
    name: "Rahul",
    watchlist: ["Jawan", "Oppenheimer", "Leo"],
    history: ["RRR", "Animal", "Pathaan"],
  };

  return (
    <div className="bg-black text-white min-h-screen px-10 py-10">
      <h1 className="text-4xl font-bold text-red-500 mb-6">Welcome, {user.name}</h1>

      <section className="mb-10">
        <h2 className="text-2xl font-semibold text-red-400 mb-4">üé¨ Watchlist</h2>
        <ul className="list-disc pl-6 text-lg">
          {user.watchlist.map((item, i) => (
            <li key={i} className="mb-1">{item}</li>
          ))}
        </ul>
      </section>

      <section>
        <h2 className="text-2xl font-semibold text-red-400 mb-4">üìú History</h2>
        <ul className="list-disc pl-6 text-lg">
          {user.history.map((item, i) => (
            <li key={i} className="mb-1">{item}</li>
          ))}
        </ul>
      </section>
    </div>
  );
};

export default Dashboard;

////////////////////////////////////////



h
O
M 
E

import React from 'react';
import MovieCard from '../Components/MovieCard';

const oldMovies = [
  {
    title: "Sholay",
    image: "https://upload.wikimedia.org/wikipedia/en/5/52/Sholay-poster.jpg"
  },
  {
    title: "Mughal-e-Azam",
    image: "https://m.media-amazon.com/images/M/MV5BNWE0M2M0NTQtMTNkMS00ODgyLTg4MDMtODEwZjZjOTE1MDhjXkEyXkFqcGc@._V1_.jpg"
  },
  {
    title: "Mother India",
    image: "https://upload.wikimedia.org/wikipedia/en/2/20/Mother_India_poster.jpg"
  },
  {
    title: "Deewaar",
    image: "https://m.media-amazon.com/images/M/MV5BMTc0NDM4MjYwOV5BMl5BanBnXkFtZTcwMDM3ODgzMQ@@._V1_.jpg"
  },
  {
    title: "Guide",
    image: "src/assets/Img/images.jpg"
  },
  {
    title: "Pakeezah",
    image: "https://m.media-amazon.com/images/I/61tL4UubomL._AC_UF894,1000_QL80_.jpg"
  },
  {
    title: "Kaagaz Ke Phool",
    image: "https://m.media-amazon.com/images/I/81RIx1swDCL._AC_UF894,1000_QL80_.jpg"
  },
  {
    title: "Awara",
    image: "https://m.media-amazon.com/images/I/71V6MvA8N3L._AC_UF894,1000_QL80_.jpg"
  },
  {
    title: "Anand",
    image: "src/assets/Img/anad.jpg"
  },
  {
    title: "Chalti Ka Naam Gaadi",
    image: "https://m.media-amazon.com/images/I/61RxTrnnA1L._AC_UF894,1000_QL80_.jpg"
  }
];

const OldBollywood = () => {
  return (
    <div className="container my-5">
      <h2 className="text-danger text-center fw-bold mb-4">üé¨ Old Bollywood Classics</h2>
      <p className="text-center text-light">‚≠ê Rate & Relive the Golden Era</p>
      <div className="row">
        {oldMovies.map((movie, index) => (
          <div className="col-md-3 mb-4" key={index}>
            <MovieCard movie={{ title: movie.title, poster: movie.image }} />
          </div>
        ))}
      </div>
    </div>
  );
};

export default OldBollywood;


















////////////////////////////////////////////////////////////////////////////////////////////////












import React, { useState, useEffect } from 'react';
import './moviecard.css';


export default function MovieCard({ movie }) {
  const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));
  const [rating, setRating] = useState(0);
  const [hover, setHover] = useState(0);
  const [reviewText, setReviewText] = useState('');
  const [allReviews, setAllReviews] = useState([]);
  const [wishlist, setWishlist] = useState(false);

  useEffect(() => {
    const storedReviews = JSON.parse(localStorage.getItem(`reviews-${movie.id}`)) || [];
    setAllReviews(storedReviews);

    const storedWishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
    setWishlist(storedWishlist.some(item => item.id === movie.id));
  }, [movie.id]);

  const handleReviewSubmit = () => {
    if (!loggedInUser) {
      alert('Please login to submit a review.');
      return;
    }

    const newReview = {
      user: loggedInUser.username,
      rating,
      text: reviewText,
      date: new Date().toLocaleDateString(),
    };

    const updatedReviews = [...allReviews, newReview];
    setAllReviews(updatedReviews);
    localStorage.setItem(`reviews-${movie.id}`, JSON.stringify(updatedReviews));
    setRating(0);
    setReviewText('');
  };

  const toggleWishlist = () => {
    if (!loggedInUser) {
      alert('Please login to add to wishlist.');
      return;
    }

    let stored = JSON.parse(localStorage.getItem('wishlist')) || [];
    if (wishlist) {
      stored = stored.filter(item => item.id !== movie.id);
    } else {
      stored.push(movie);
    }

    localStorage.setItem('wishlist', JSON.stringify(stored));
    setWishlist(!wishlist);
  };

  return (
    <div className="movie-card shadow">
      <img src={movie.poster} alt={movie.title} className="poster" />
      <div className="movie-body">
        <h5>{movie.title}</h5>

        {/* ‚≠ê Rating */}
        <div className="stars">
          {[...Array(5)].map((_, i) => {
            const starValue = i + 1;
            return (
              <span
                key={i}
                className={`star ${starValue <= (hover || rating) ? 'on' : 'off'}`}
                onClick={() => setRating(starValue)}
                onMouseEnter={() => setHover(starValue)}
                onMouseLeave={() => setHover(0)}
              >‚òÖ</span>
            );
          })}
        </div>

        {/* üìù Review Input */}
        <textarea
          className="form-control mt-2"
          placeholder="‚úèÔ∏è Write your review..."
          rows="2"
          value={reviewText}
          onChange={(e) => setReviewText(e.target.value)}
        />

        {/* ‚úÖ Submit Button + ‚ù§Ô∏è Wishlist */}
        <div className="d-flex justify-content-between align-items-center mt-2">
          <button className="btn btn-primary btn-sm" onClick={handleReviewSubmit}>
            Submit Review
          </button>
          <button className={`btn btn-${wishlist ? 'danger' : 'outline-light'} btn-sm`} onClick={toggleWishlist}>
            {wishlist ? '‚ù§Ô∏è In Wishlist' : '‚ô° Wishlist'}
          </button>
        </div>

        {/* üë• User Reviews */}
        {allReviews.length > 0 && (
          <div className="reviews mt-3">
            {allReviews.map((r, idx) => (
              <div key={idx} className="review">
                <div><strong>üë§ {r.user}</strong> {'‚≠ê'.repeat(r.rating)}</div>
                <div>{r.text}</div>
                <small className="text-muted">{r.date}</small>
                <hr />
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
}

/////////////////////movie card//////////////////////////
import React, { useState, useEffect } from 'react';
import './moviecard.css';

export default function MovieCard({ movie }) {
  const loggedInUser = JSON.parse(localStorage.getItem('currentUser')); // ‚úÖ
  const [rating, setRating] = useState(0);
  const [hover, setHover] = useState(0);
  const [reviewText, setReviewText] = useState('');
  const [allReviews, setAllReviews] = useState([]);
  const [wishlist, setWishlist] = useState(false);

  useEffect(() => {
    const storedReviews = JSON.parse(localStorage.getItem(`reviews-${movie.id}`)) || [];
    setAllReviews(storedReviews);

    const storedWishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
    setWishlist(storedWishlist.some(item => item.id === movie.id));
  }, [movie.id]);

  const handleReviewSubmit = () => {
    if (!loggedInUser) {
      alert('Please login to submit a review.');
      window.location.href = '/login';
      return;
    }

    const newReview = {
      user: loggedInUser.username,
      rating,
      text: reviewText,
      date: new Date().toLocaleDateString(),
    };

    const updatedReviews = [...allReviews, newReview];
    setAllReviews(updatedReviews);
    localStorage.setItem(`reviews-${movie.id}`, JSON.stringify(updatedReviews));
    setRating(0);
    setReviewText('');
  };

  const handleDeleteReview = (index) => {
    const updatedReviews = allReviews.filter((_, i) => i !== index);
    setAllReviews(updatedReviews);
    localStorage.setItem(`reviews-${movie.id}`, JSON.stringify(updatedReviews));
  };

  const toggleWishlist = () => {
    if (!loggedInUser) {
      alert('Please login to add to wishlist.');
      window.location.href = '/login';
      return;
    }

    let stored = JSON.parse(localStorage.getItem('wishlist')) || [];
    if (wishlist) {
      stored = stored.filter(item => item.id !== movie.id);
    } else {
      stored.push({ ...movie, user: loggedInUser.username });

    }

    localStorage.setItem('wishlist', JSON.stringify(stored));
    setWishlist(!wishlist);
  };

  return (
    <div className="movie-card shadow">
      <img src={movie.poster || movie.image} alt={movie.title} className="poster" />
      <div className="movie-body">
        <h5>{movie.title}</h5>

        {/* ‚≠ê Star Rating */}
        <div className="stars">
          {[...Array(5)].map((_, i) => {
            const starValue = i + 1;
            return (
              <span
                key={i}
                className={`star ${starValue <= (hover || rating) ? 'on' : 'off'}`}
                onClick={() => setRating(starValue)}
                onMouseEnter={() => setHover(starValue)}
                onMouseLeave={() => setHover(0)}
              >‚òÖ</span>
            );
          })}
        </div>

        {/* üìù Review Input */}
        <textarea
          className="form-control mt-2"
          placeholder="‚úèÔ∏è Write your review..."
          rows="2"
          value={reviewText}
          onChange={(e) => setReviewText(e.target.value)}
        />

        {/* ‚úÖ Submit & Wishlist Buttons */}
        <div className="d-flex justify-content-between align-items-center mt-2">
          <button className="btn btn-primary btn-sm" onClick={handleReviewSubmit}>
            Submit Review
          </button>
          <button className={`btn btn-${wishlist ? 'danger' : 'outline-light'} btn-sm`} onClick={toggleWishlist}>
            {wishlist ? '‚ù§Ô∏è In Wishlist' : '‚ô° Wishlist'}
          </button>
        </div>

        {/* üë• User Reviews */}
        {allReviews.length > 0 && (
          <div className="reviews mt-3">
            {allReviews.map((r, idx) => (
              <div key={idx} className="review">
                <div><strong>üë§ {r.user}</strong> {'‚≠ê'.repeat(r.rating)}</div>
                <div>{r.text}</div>
                <small className="text-muted">{r.date}</small>

                {/* üóëÔ∏è Show delete button if current user wrote the review */}
                {loggedInUser && r.user === loggedInUser.username && (
                  <div className="text-end">
                    <button
                      className="btn btn-sm btn-outline-danger mt-1"
                      onClick={() => handleDeleteReview(idx)}
                    >
                      üóëÔ∏è Delete Review
                    </button>
                  </div>
                )}

                <hr />
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
}

